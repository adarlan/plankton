version: "3.7"

services:

  lambada:
    image: alpine
    command: ash -c 'for x in $$FOO; do echo $$x; sleep 1; done'
    environment:
      FOO: "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

  tango:
    image: alpine
    command: ash -c 'for x in $$BAR; do echo $$x; sleep 1; done'
    environment:
      BAR: "0 1 2 3 4 5 6 7 8 9"

  mysql:
    image: foo-service
    ports:
      - 85:80
    labels:
      dockerflow.start.when: dependents-waiting  # start when there is at least one direct dependent job waiting
      dockerflow.stop.when: dependents-exited    # stop when all dependent jobs have exited

  adminer:
    image: foo-service
    ports:
      - 86:80
    labels:
      dockerflow.start.when: scheduled  # default; start when all rules passed
      dockerflow.stop.when: manual      # stop when human call 'stop' action, which is enabled if status='running'
      dockerflow.wait.ports: 85
      dockerflow.timeout: 1

  download:
    image: foo-task
    command: --time 60 --file /flags/downloaded
    volumes:
      - ./flags:/flags
    labels:
      dockerflow.start.when: scheduled  # default
      dockerflow.stop.when: finished    # defaul; enable 'cancel' action if status = waiting|scheduled|running
      dockerflow.timeout: 1
      dockerflow.enable.if: '[ oi = oi ]'

  save-the-whales:
    dockerflow.start.when: manual  # start when human call 'start' action, which is enabled if status='rules-passed' (something between waitind and scheduled)
    image: ubuntu
    entrypoint:
      - /bin/bash
      - -c
      - |
        echo hello
        echo goodbye
    labels:
      dockerflow.timeout: 1
      dockerflow.enable.if: '[ 0 = 1 ]'

  import:
    image: foo-task
    command: --time 45
    volumes:
      - ./flags:/flags
    labels:
      dockerflow.timeout: 60
      dockerflow.enable.if: '[ 0 = 1 ] && [ "$$GIT_REF" = master ] || [ ! "$${BAR:0:4}" = "bar-" ]'
      dockerflow.wait.success.of: download
      dockerflow.wait.ports: 85
      dockerflow.wait.files: flags/downloaded

  docker-ls:
    image: docker
    command: sh -c 'docker ps'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      dockerflow.wait.success.of: tango
