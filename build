#!/bin/bash
set -e

MAVEN_TAG=3.6-jdk-11
BASE_DIR=$PWD

buildEngine () {
    cd $BASE_DIR/engine
    docker run -it --rm \
        -u $(id -u $USER):$(id -g $USER) \
        -v /etc/passwd:/etc/passwd:ro \
        -v $HOME/.m2/repository:$HOME/.m2/repository \
        -v $PWD:/workspace \
        -w /workspace \
        --entrypoint "" \
        maven:$MAVEN_TAG \
        mvn install
}

buildLocalRunner () {
    cd $BASE_DIR/local-runner
    docker run -it --rm \
        -u $(id -u $USER):$(id -g $USER) \
        -v /etc/passwd:/etc/passwd:ro \
        -v $HOME/.m2/repository:$HOME/.m2/repository \
        -v $PWD:/workspace \
        -w /workspace \
        --entrypoint "" \
        maven:$MAVEN_TAG \
        mvn install
    docker build -t plankton .
    docker image tag plankton adarlan/plankton
}

buildRemoteRunner () {
    cd $BASE_DIR/remote-runner
    docker run -it --rm \
        -u $(id -u $USER):$(id -g $USER) \
        -v /etc/passwd:/etc/passwd:ro \
        -v $HOME/.m2/repository:$HOME/.m2/repository \
        -v $PWD:/workspace \
        -w /workspace \
        --entrypoint "" \
        maven:$MAVEN_TAG \
        mvn install
    docker build -t plankton:remote-runner .
    docker build -t plankton:remote-runner-sandbox -f sandbox.Dockerfile .
    docker image tag plankton:remote-runner adarlan/plankton:remote-runner
    docker image tag plankton:remote-runner-sandbox adarlan/plankton:remote-runner-sandbox
}

pushImages () {
    docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
    docker push adarlan/plankton
    docker push adarlan/plankton:remote-runner
    docker push adarlan/plankton:remote-runner-sandbox
}

if [ "$1" = "" ]; then
    set -exu
    buildEngine && echo
    buildLocalRunner && echo
    buildRemoteRunner

elif [ "$1" = "engine" ]; then
    set -exu
    buildEngine

elif [ "$1" = "local-runner" ]; then
    set -exu
    buildLocalRunner

elif [ "$1" = "remote-runner" ]; then
    set -exu
    buildRemoteRunner

elif [ "$1" = "--push" ]; then
    set -exu
    buildEngine && echo
    buildLocalRunner && echo
    buildRemoteRunner && echo
    pushImages
fi
